#include "..\..\logLevel.hh"

params ["_args", "_handle"];
_args params ["_node", "_side", "_radius", ["_jammed", createHashSet]];

// Lets make sure the device is still active ...
if (isNull _node or not (alive _node) or not (_node getVariable ["RD501_EWAR_active", false])) exitWith {
	// ... if its not, log data and exit the event handler ...
	[["Tripped engine jammer Loacl PFH exit:", _node, not (alive _node), not (_node getVariable ["RD501_EWAR_active", false])] joinString " ", LOG_DEBUG, "ENGJMR"] call RD501_fnc_logMessage;
	[_handle] call CBA_fnc_removePerFrameHandler;
	[_node] call RD501_fnc_ENGJMR_remove;
};

[["Running engine jammer PFH with actively jammed nodes:", _jammed] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;

// ... if it is active, then lets start processing data ...
// ... first lets get the nearby objects to scan ...
private _nearby = nearestObjects [_node, ["Air", "LandVehicle"], _radius, true];
// ... get rid of the node object ...
_nearby = _nearby - [_node];
// ... and log the objects ...
[["Found objects near:", _node, "(objects):", _nearby] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;


// ...  then build our temp craft array ...
private _tmpCraft = [];
{
	// ... for every jammed craft in _jammed ...
	// ... if the craft is local ...
	if (local _x) then {
		// ... and is not null ...
		if (not isNull _x) then {
			// ... grab the spool counter for the craft ...
			_counter = _x getVariable ["RD501_ENGJMR_SpoolCounter", -1];

			// ... if the jammed craft is not nearby ...
			if (not (_x in _nearby)) then {
				// ... if there is a pilot ...
				_pilot = driver _x;
				if (not (isNull _pilot)) then {
					// ... and the counter is above -1 (it's already disabled) ...
					if (_counter > -1) then {
						// ... then the vic left the field and the engine
						// has been deactivated, so add this to _tmpCraft ...
						_tmpCraft pushBack _x;
						// ... set its fuel to 0 ...
						_x setFuel 0;
						// ... log this instance ...
						[[_x, "left jamming field, engine disabled."] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;
						// ... then set the left when disabled variable ...
						_x setVariable ["RD501_ENGJMR_LeftWhenDisabled", true];
					// ... if the counter is -1 (it's not disabled) ...
					} else {
						// ... and the vehicle left while it was
						// enabled ...
						if (not (_x getVariable ["RD501_ENGJMR_LeftWhenDisabled", true])) then {
							// ... then it has left the field and needs to be
							// deactivated ...
							_check = false;
							// ... so test the side of the
							// object that is leaving ...
							switch (_side) do {
								// ... if this is a wildcard jammer, always
								// disable ...
								case -1: { _check = true; };
								// ... if this is a west jammer, only disable
								// if the pilot is not west ...
								case 0: { _check = (side _pilot) != west; };
								// ... if this is an east jammer, only disable
								// if the pilot is not east ...
								case 1: { _check = (side _pilot) != east; };
								// ... if this is an independent jammer, only disable
								// if the pilot is not independent ...
								case 2: { _check = (side _pilot) != independent; };
							};

							// ... if the check is true, and 
							// the vic needs to be disabled ...
							if (_check) then {
								// ... then get the old saved fuel value ...
								_oldFuel = _x getVariable ["RD501_ENGJMR_Fuel", -1];
								// ... if that value is missing ...
								if (_oldFuel == -1) then {
									// ... then set the value to the current fuel value ...
									_x setVariable ["RD501_ENGJMR_Fuel", fuel _x];
									// ... then set the vehicle fuel to 0 ...
									_x setFuel 0;	
								};

								// ... then enable the spool counter by setting it
								// to 0 ...
								_x setVariable ["RD501_ENGJMR_SpoolCounter", 0];

								// ... then log this action ...
								[[_x, "left jamming field, engine disabled."] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;
							};
						};
					};
				};
			// ... if the craft is in the nearby list ...
			} else {
				// ... then add it to the temp craft ...
				_tmpCraft pushBack _x;
				// ... remove the craft from the _nearby list ...
				_pos = _nearby find _x;
				if (_pos > -1) then {
					_nearby deleteAt _pos;
				};

				// ... then set the fuel to 0
				// if the counter is active ...
				if (_counter > -1) then {
					_x setFuel 0;
					// ... and indicate this vehicle is still within
					// the bubble ...
					_x setVariable ["RD501_ENGJMR_LeftWhenDisabled", false];
				};
				
				// ... then log this action ...
				[[_x, "is inside the bubble."] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;
			};
		};
	};
} forEach _jammed;

// ... then, for any remaining nearby craft ...
{
	// ... if the craft is local ...
	if (local _x) then {
		// ... get the pilot of this craft ...
		_pilot = driver _x;
		// ... if the pilot is not null ...
		if (not (isNull _pilot)) then {
			// ... then it has entered the field and needs to be
			// deactivated ...
			_check = false;
			// ... so test the side of the
			// object that is entering ...
			switch (_side) do {
				// ... if this is a wildcard jammer, always
				// disable ...
				case -1: { _check = true; };
				// ... if this is a west jammer, only disable
				// if the pilot is not west ...
				case 0: { _check = (side _pilot) != west; };
				// ... if this is an east jammer, only disable
				// if the pilot is not east ...
				case 1: { _check = (side _pilot) != east; };
				// ... if this is an independent jammer, only disable
				// if the pilot is not independent ...
				case 2: { _check = (side _pilot) != independent; };
			};

			// ... if the check is true, and 
			// the vic needs to be disabled ...
			if (_check) then {
				// ... then get the old saved fuel value ...
				_oldFuel = _x getVariable ["RD501_ENGJMR_Fuel", -1];
				// ... if that value is missing ...
				if (_oldFuel == -1) then {
					// ... then set the value to the current fuel value ...
					_x setVariable ["RD501_ENGJMR_Fuel", fuel _x];
					// ... then set the vehicle fuel to 0 ...
					_x setFuel 0;	
				};

				// ... then enable the spool counter by setting it
				// to 0 ...
				_x setVariable ["RD501_ENGJMR_SpoolCounter", 0];
				// ... and indicatet this vehicle has not left while
				// disabled ...
				_x setVariable ["RD501_ENGJMR_LeftWhenDisabled", false];

				// ... then log this action ...
				[[_x, "entered jamming field, engine disabled."] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;

				// ... then add this vehicle to _tmpCraft ...
				_tmpCraft pushBack _x;
			};
		};
	};
} forEach _nearby;

[["Saving jammed craft for next run", _tmpCraft] joinString " ", LOG_TRACE, "ENGJMR"] call RD501_fnc_logMessage;

// ... finally, save the jammed list for next execution.
_args set [3, _tmpCraft];
